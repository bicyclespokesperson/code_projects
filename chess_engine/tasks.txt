Generate moves

This article is good, might also want to just look at the source code for the engine
https://www.rhysre.net/fast-chess-move-generation-with-magic-bitboards.html

Pseudocode for shallow blue:
  gen pseudo legal moves
  array legal_moves
  for each pseudo legal move
    board tmpBoard(board)
    tmpBoard.perform_move(move)
    if !inCheck() // inCheck uses bitboards to check if a square is under attack
      save move in legal_moves
  
  # Purple has move logic related to whether or not a move is legal (check if piece is pinned, etc)

Another good look at move generation
  Contains pesudocode for bitboard -> move function
https://www.josherv.in/2021/03/19/chess-1/

Pseudocode for purple:
  for piece in get_white_rooks():
    gen_rook_moves()
  
  // separate function
  extract_pawn_moves(Bitboard of pawn pushes, int pawn_direction) -> list of moves

  // Useful to be able to iterate through 1 bits in bitboard?

https://www.chessprogramming.org/Classical_Approach
https://www.chessprogramming.org/Bitboard_Board-Definition
https://www.chessprogramming.org/Efficient_Generation_of_Sliding_Piece_Attacks#Bitboard_Board-Definition
https://www.chessprogramming.org/General_Setwise_Operations#UpdateByMove

Integrate UCI protocol

Implement engine functionality

